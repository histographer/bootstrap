version: '3.7'


volumes:
  postgis_data:
  mongodb_data:
  IMS_STORAGE_VOLUME:
  IMS_BUFFER_VOLUME:
  ALGO_VOLUME:
  ANALYSIS_VOLUME:
  BACKUP_VOLUME:

networks:
  network_1:
  network_2:
  network_3:
  software_router:
  traefik:
    external: true
  

secrets:
  ADMIN_PWD:
    external: true
  ADMIN_PUB_KEY:
    external: true
  ADMIN_PRIV_KEY:
    external: true
  SUPERADMIN_PUB_KEY:
    external: true
  SUPERADMIN_PRIV_KEY:
    external: true
  RABBITMQ_PUB_KEY:
    external: true
  RABBITMQ_PRIV_KEY:
    external: true
  IMS_PUB_KEY:
    external: true
  IMS_PRIV_KEY:
    external: true
  SERVER_ID:
    external: true
  PATORNAT_MONGODB_PASSWORD:
    external: true
  PATORNAT_MONGODB_ROOT_PASSWORD:
    external: true
  PATORNAT_INITDB_MONGODB_ROOT_PASSWORD:
    external: true


services:

  rabbitmq:
    env_file:
      - ".env"
    image: 'cytomine/rabbitmq:v1.1.2'
    restart: always
    networks:
      network_3:
        aliases:
          - rabbitmq
      software_router:
        aliases:
          - rabbitmq
    expose:
      - '5672'
      - '15672'


  postgresql:
    env_file:
      - ".env"
    image: 'cytomine/postgis:v2.0.0'
    restart: always
    networks:
      network_3:
        aliases:
          - postgresql
    volumes:
      - "postgis_data:/var/lib/postgresql"


  mongodb:
    env_file:
      - ".env"
    image: 'cytomine/mongodb:v1.1.2'
    restart: always
    networks:
      network_3:
        aliases:
          - mongodb
    volumes:
      - mongodb_data:/data/db
    expose:
      - '27017'
    labels:
      - "traefik.enable=true" # <== Enableo traefik on itself to view dashboard and assign subdomain to view it


  bioformat:
    env_file:
      - ".env"
    image: 'cytomine/bioformat:v1.1.2'
    restart: always
    networks:
      network_2:
        aliases:
          - bioformat
    volumes:
      - "${IMS_STORAGE_PATH}:${IMS_STORAGE_PATH}"
    labels:
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it

  memcached:
    env_file:
      - ".env"
    build:
      context: "./memcached"
    image: "docker.pkg.github.com/histographer/infrastructure/memcached"
    restart: always
    networks:
      network_1:
        aliases:
          - memcached
    labels:
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it


  iipoff:
    env_file:
      - ".env"
    build:
      context: "./iipOff"
    image: "docker.pkg.github.com/histographer/infrastructure/iipoff"
    depends_on:
      - memcached
    restart: always
    privileged: true
    networks:
      network_1:
        aliases:
          - iipoff
      traefik:
        aliases:
          - iipoff
    labels:
      - "traefik.http.routers.iipoff.rule=Host(`${IIP_OFF_URL}`)"
      - "traefik.http.routers.iipoff.entrypoints=web"
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it

    volumes:
      - "${IMS_STORAGE_PATH}:$IMS_STORAGE_PATH"


  iipcyto:
    env_file:
      - ".env"
    build:
      context: "./iipCyto"
    image: "docker.pkg.github.com/histographer/infrastructure/iipcyto"
    restart: always
    networks:
      network_1:
        aliases:
          - iipcyto
      traefik:
        aliases:
          - iipcyto
    privileged: true
    labels:
      - "traefik.http.routers.myproxy.rule=Host(`${IIP_CYTO_URL}`)"
      - "traefik.http.routers.myproxy.entrypoints=web"
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it

    volumes:
      - "${IMS_STORAGE_PATH}:${IMS_STORAGE_PATH}"


  ims:
    env_file:
      - ".env"
    secrets:
      - IMS_PUB_KEY
      - IMS_PRIV_KEY
    build:
      context: "./ims"
    image: "docker.pkg.github.com/histographer/infrastructure/ims"
    restart: always
    depends_on:
      - core
    labels:
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.ims.rule=Host(`${IMS_URL1}`,`${IMS_URL2}`, `${UPLOAD_URL}`)"
      - "traefik.http.routers.core.middlewares=cors"
      - "traefik.http.routers.ims.entrypoints=web"
    networks:
      network_1:
        aliases:
          - ims
      network_2:
        aliases:
          - ims
      traefik:
        aliases:
          - ims
    volumes:
      - "${IMS_STORAGE_PATH}:${IMS_STORAGE_PATH}"
      - "${IMS_BUFFER_PATH}:/tmp/uploaded"

  core:
    env_file:
      - ".env"
    secrets:
      - ADMIN_PWD
      - ADMIN_PUB_KEY
      - ADMIN_PRIV_KEY
      - SUPERADMIN_PUB_KEY
      - SUPERADMIN_PRIV_KEY
      - IMS_PUB_KEY
      - IMS_PRIV_KEY
      - RABBITMQ_PRIV_KEY
      - RABBITMQ_PUB_KEY
      - SERVER_ID
    restart: always
    image: "docker.pkg.github.com/histographer/infrastructure/core"
    labels:
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.core.rule=Host(`${CORE_URL}`) && PathPrefix(`/api`, `/j_spring_security`, `/login`, `/logout`, `/server`, `/session`, `/custom-ui`, `/static`, `/restApiDoc`, `/js/jsondoc`, `/css/jsondoc`)" 
      # - "traefik.http.services.core.loadbalancer.server.port=8080"
      - "traefik.http.routers.core.middlewares=cors"
      - "traefik.http.routers.core.entrypoints=web"
    networks:
      network_3:
        aliases:
          - core
      traefik:
        aliases:
          - core

  digipat-frontend:
    env_file:
      - ".env"
    restart: always
    image: "docker.pkg.github.com/histographer/wizard-frontend/digipat-frontend"
    networks:
      traefik:
        aliases:
          - digipat-frontend
    labels:
      - "traefik.enable=true" 
      - "traefik.http.routers.digipat-frontend.rule=Host(`${CORE_URL}`)"
      - "traefik.http.routers.digipat-frontend.entrypoints=web"
    volumes:
      - "${IMS_BUFFER_PATH}:/tmp/uploaded"
    expose:
      - '80'
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 120s



  software_router:
    env_file:
      - ".env"
    secrets:
      - RABBITMQ_PUB_KEY
      - RABBITMQ_PRIV_KEY
    build:
      context: "./software_router"
    image: "docker.pkg.github.com/histographer/infrastructure/software_router"
    privileged: true
    depends_on:
      - core
    networks:
      software_router:
        aliases:
          - software_router
    volumes:
      - "${ALGO_PATH}:/software_router/algo/"
    labels:
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it

